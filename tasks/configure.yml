---

- name: Ensure hostname is resolvable
  become: yes
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 {{ ansible_hostname }}"

- name: Create various directories
  become: yes
  file:
    group: "{{ gocd_server.group }}"
    owner: "{{ gocd_server.user }}"
    path: "/home/{{ gocd_server.user }}/{{ item }}"
    state: directory
  with_items:
    - work/go-server
    - bin
    - .aws

- name: Copy secrets from S3
  become: yes
  become_user: "{{ gocd_server.user }}"
  shell: "aws s3 cp {{ item.s3_path }} {{ item.local_path }}"
  args:
    creates: "{{ item.local_path }}"
  with_items: gocd_server.aws.s3_secret_files

- name: Secure secrets from S3
  become: yes
  file:
    group: "{{ gocd_server.user }}"
    mode: "{{ item.mode | default(0600) }}"
    owner: "{{ gocd_server.user }}"
    path: "{{ item.local_path }}"
  with_items: gocd_server.aws.s3_secret_files

- name: Ensures go-server configuration
  become: yes
  template:
    dest: "{{ item.dest }}"
    group: "{{ gocd_server.group }}"
    owner: "{{ gocd_server.user }}"
    src: "{{ item.src }}"
  with_items:
    - src: defaults.j2
      dest: /etc/default/go-server
    - src: passwd.j2
      dest: "/home/{{ gocd_server.user }}/passwd"
  notify:
    - restart go-server

- name: Ensures go-server backup and restore scripts
  become: yes
  template:
    dest: "{{ item.dest }}"
    group: "{{ gocd_server.group }}"
    mode: 0750
    owner: "{{ gocd_server.user }}"
    src: "{{ item.src }}"
  with_items:
    - src: aws_s3_backup.sh.j2
      dest: "/home/{{ gocd_server.user }}/bin/aws_s3_backup.sh"
    - src: aws_s3_restore.sh.j2
      dest: "/home/{{ gocd_server.user }}/bin/aws_s3_restore.sh"
  when: gocd_server.aws.backup_bucket
  notify:
    - restart go-server

- name: Setup AWS credentials
  become: yes
  become_user: "{{ gocd_server.user }}"
  template:
    dest: "/home/go/.aws/credentials"
    mode: 0600
    src: aws_credentials.j2
  when: gocd_server.aws.access_key_id

- name: Restore config from AWS
  become: yes
  become_user: "{{ gocd_server.user }}"
  command: "/home/{{ gocd_server.user }}/bin/aws_s3_restore.sh"
  when: gocd_server.aws.backup_bucket

- name: Ensure gocd server is running
  become: yes
  service:
    name: go-server
    state: started
